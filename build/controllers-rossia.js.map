{"version":3,"sources":["controllers-rossia.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","MealRossiyaController","$scope","$element","backend","utils","switchService","vm","locked","checkServiceRemovalProhibited","service","active","selectFirstAvailablePassengerFlight","removeExtraService","selectFlightPassenger","flightNum","passengerNum","selectedFlight","selectedPassenger","updateMealMenu","getFirstAvailableFlightNum","getFirstAvailablePassengerNum","mealMenu","itemsByPassengerSegments","mealMenuSubgroup","setPassengerFlightMeal","subgroupNum","mealItem","selectedPassengerFlightMeal","getSelectedPassengerFlightMeal","newMealParams","passenger_id","orderInfo","passengers","id","segment_id","plainFlights","subgroup","subgroups","service_type","serviceType","rfisc","then","modifyExtraService","removePassengerFlightMeal","result","passengerSegmentServices","passengerSegmentMeal","editableExtraServicesByPassengers","_","findWhere","serviceItem","scrollToStart","passengersTableContainer","scrollTo","scrollToEnd","scrollWidth","mobileTableScrollHandler","scrollLeft","clientWidth","scrollRight","canScrollRight","canScrollLeft","$apply","availableBySegments","availableByPassengerSegments","checkAllChoose","trueFlight","trueChoose","j","this","find","hasAlias","getAvailablePassengersCount","getParam","mealImagesPath","addOrderInfoListener","$watch","on","angular","component","templateUrl","controller","controllerAs","bindings","2","SeatRossiyaController","$timeout","modifyError","clearFlightPassenger","resp","error","seatMap","setSeatMapContainerTopPosition","reset","seatMapContainerTopPosition","jQuery","css","updateSeatMap","loadingSeatMap","seatMapError","setPassengerFlightSeat","chair","cabinAllowed","rowNumber","available","value","number","commonSubgroup","updateSunInfoByFlights","sunInfoByFlights","forEach","flight","sunInfo","origincity","departuredate","departuretime","destinationcity","arrivaldate","arrivaltime","getAvailablePassengersCountWrap","count","filter","pax","hasSeats","removePassengerFlightSeat","passengerSegmentSeat","3","PopupMealRossiyaController","mealMenuSubgroupMobileChange","mealMenuSubgroupMobile","switchNext","successSwitch","currentPassengerIndex","currentFlightIndex","switchPrev","close","fancybox","subgroupItems","createOptionsForUiSelect","availablePassengers","passenger","index","clearPassengerFlightMeal","getPassengerFlightMeal","4","console","log","./components/es-meal-rossiya/es-meal-rossiya","./components/es-seat-rossiya/es-seat-rossiya","./components/popup-meal-rossiya/popup-meal-rossiya"],"mappings":"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","file":"controllers-rossia.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('esMealRossiya', {\n    templateUrl: 'components/es-meal-rossiya/es-meal-rossiya.html',\n    controller: ['$scope', '$element','backend', 'utils', MealRossiyaController],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction MealRossiyaController($scope, $element, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer');\n\n    vm.switchService = switchService;\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.setPassengerFlightMeal = setPassengerFlightMeal;\n    vm.removePassengerFlightMeal = removePassengerFlightMeal;\n    vm.getSelectedPassengerFlightMeal = getSelectedPassengerFlightMeal;\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n    vm.checkAllChoose = checkAllChoose;\n    vm.hasAlias = backend.hasAlias;\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    vm.selectedFlight = 0;\n    vm.selectedPassenger = 0;\n\n    if (backend.getParam('site.externalStorageBaseUrl')) {\n        vm.mealImagesPath = backend.getParam('site.externalStorageBaseUrl') + '/img/content/meal';\n    } else {\n        vm.mealImagesPath = './themes/websky/assets/static/img/content/meal';\n    }\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    $scope.$watch('vm.service', function () {\n        if (vm.mealMenu) {\n            updateMealMenu();\n        }\n    });\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        updateMealMenu();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                backend.removeExtraService({\n                    code: 'meal'\n                });\n            }\n        }\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateMealMenu();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateMealMenu();\n    }\n\n    function updateMealMenu() {\n        vm.mealMenu = vm.service.itemsByPassengerSegments[vm.selectedPassenger][vm.selectedFlight];\n        vm.mealMenuSubgroup = false;\n    }\n\n    function setPassengerFlightMeal(subgroupNum, mealItem) {\n        var selectedPassengerFlightMeal = getSelectedPassengerFlightMeal(vm.selectedPassenger, vm.selectedFlight),\n            newMealParams = {\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                subgroup: vm.service.subgroups[subgroupNum],\n                service_type: mealItem.serviceType,\n                rfisc: mealItem.rfisc\n            };\n        if (!vm.locked) {\n            if (\n                selectedPassengerFlightMeal &&\n                !backend.checkServiceRemovalProhibited('meal', vm.selectedPassenger, vm.selectedFlight)\n            ) {\n                backend.removeExtraService({\n                    code: 'meal',\n                    passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                    segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                    service_type: selectedPassengerFlightMeal.serviceType,\n                    rfisc: selectedPassengerFlightMeal.rfisc\n                }, true).then(function () {\n                    backend.modifyExtraService(newMealParams);\n                });\n            } else {\n                backend.modifyExtraService(newMealParams);\n            }\n        }\n    }\n\n    function removePassengerFlightMeal(passengerNum, flightNum) {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal', passengerNum, flightNum)) {\n            backend.removeExtraService({\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            });\n        }\n    }\n\n    function getSelectedPassengerFlightMeal(passengerNum, flightNum) {\n        var result,\n            passengerSegmentServices,\n            passengerSegmentMeal;\n        if (vm.orderInfo.editableExtraServicesByPassengers) {\n            if (vm.orderInfo.editableExtraServicesByPassengers[passengerNum]) {\n                /* jshint maxlen: 150 */\n                passengerSegmentServices = vm.orderInfo.editableExtraServicesByPassengers[passengerNum].passengerSegmentServices[flightNum];\n                if (passengerSegmentServices) {\n                    passengerSegmentMeal = _.findWhere(passengerSegmentServices, { code: 'meal' });\n                    if (passengerSegmentMeal) {\n                        result = passengerSegmentMeal.serviceItem;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function checkAllChoose() {\n      // vm.orderInfo.passengers пассажиры\n      // vm.orderInfo.plainFlights рейсы\n      // vm.service.availableByPassengerSegments\n      // vm.orderInfo.editableExtraServicesByPassengers\n      // здесть храняться купленные или выбранные услуги, все даже seat\n      // getSelectedPassengerFlightMeal(passengerNum, flightNum) он ципляет только если выбрана еда и возвращает объект\n      // В это количество доступных рейсов где можно купить что-то и это количество должно совпадать с trueChoose\n      var trueFlight = 0;\n      // В этой перемнной храниться количество выбранных блюд\n      var trueChoose = 0;\n\n      for (var i = 0; i < vm.service.availableByPassengerSegments.length; i++) {\n        for (var j = 0; j < vm.service.availableByPassengerSegments[i].length; j++) {\n          if(vm.service.availableByPassengerSegments[i][j]) {\n            trueFlight++;\n          }\n        }\n      }\n\n      for (var i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n        for (var j = 0; j < vm.orderInfo.passengers.length; j++) {\n          if (getSelectedPassengerFlightMeal(j, i)) {\n            trueChoose++;\n          }\n        }\n      }\n\n      return trueChoose == trueFlight;\n\n    }\n\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('esSeatRossiya', {\n    templateUrl: 'components/es-seat-rossiya/es-seat-rossiya.html',\n    controller: ['$scope', '$element', '$timeout', 'backend', 'utils', SeatRossiyaController],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction SeatRossiyaController($scope, $element, $timeout, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer'),\n        seatMapContainerTopPosition = '0px';\n\n    vm.switchService = switchService;\n\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.setPassengerFlightSeat = setPassengerFlightSeat;\n    //\n    vm.getSelectedPassengerFlightMeal = getSelectedPassengerFlightMeal;\n    vm.checkAllChoose = checkAllChoose;\n\n    vm.hasAlias = backend.hasAlias;\n\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.getAvailablePassengersCountWrap = getAvailablePassengersCountWrap;\n\n    vm.removePassengerFlightSeat = removePassengerFlightSeat;\n\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    updateSunInfoByFlights();\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        selectFirstAvailablePassengerFlight();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('seat')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                vm.modifyError = false;\n                backend.removeExtraService({\n                    code: 'seat'\n                }).then(clearFlightPassenger, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function clearFlightPassenger() {\n        vm.seatMap = false;\n        vm.selectedFlight = -1;\n        vm.selectedPassenger = -1;\n    }\n\n    function setSeatMapContainerTopPosition(reset) {\n        if (reset) {\n            seatMapContainerTopPosition = '0px';\n        } else {\n            seatMapContainerTopPosition = jQuery('#seatMapCont .mCSB_container').css('top');\n        }\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        // Нужно запомнить положение карты мест для переключения между пассажирами одного сегмента\n        setSeatMapContainerTopPosition(vm.selectedFlight !== flightNum);\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateSeatMap();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateSeatMap();\n    }\n\n    function updateSeatMap() {\n\n        if (vm.selectedPassenger !== -1 && vm.selectedFlight !== -1) {\n            vm.loadingSeatMap = true;\n            vm.seatMapError = false;\n            backend.seatMap(\n                vm.orderInfo.passengers[vm.selectedPassenger].id,\n                vm.orderInfo.plainFlights[vm.selectedFlight].id\n            ).then(function (resp) {\n                vm.seatMap = resp;\n                vm.loadingSeatMap = false;\n                $timeout(function () {\n                    jQuery('#seatMapCont .mCSB_container').css('top', seatMapContainerTopPosition);\n                });\n            }, function (resp) {\n                vm.seatMapError = resp.error;\n                vm.loadingSeatMap = false;\n            });\n        }\n\n    }\n\n    function setPassengerFlightSeat(chair, cabinAllowed, rowNumber) {\n        if (!vm.locked) {\n            if (chair.available && cabinAllowed) {\n                setSeatMapContainerTopPosition();\n                vm.modifyError = false;\n                backend.modifyExtraService({\n                    code: 'seat',\n                    passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                    segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                    value: rowNumber + chair.number,\n                    subgroup: vm.service.commonSubgroup,\n                    rfisc: chair.rfisc || '',\n                    service_type: 'F'\n                }).then(updateSeatMap, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function updateSunInfoByFlights() {\n        vm.sunInfoByFlights = [];\n        vm.orderInfo.plainFlights.forEach(function (flight, flightNum) {\n            backend.sunInfo(\n                flight.origincity,\n                flight.departuredate,\n                flight.departuretime,\n                flight.destinationcity,\n                flight.arrivaldate,\n                flight.arrivaltime\n            ).then(function (resp) {\n                vm.sunInfoByFlights[flightNum] = resp;\n            });\n        });\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getAvailablePassengersCountWrap(availableByPassengerSegments) {\n        var count = utils.getAvailablePassengersCount(availableByPassengerSegments);\n        return count + vm.orderInfo.passengers.filter(function (pax) {\n            return !pax.hasSeats;\n        }).length;\n    }\n\n    function removePassengerFlightSeat(passengerNum, flightNum) {\n        if (\n            !vm.locked && !backend.checkServiceRemovalProhibited('seat', passengerNum, flightNum)\n        ) {\n            vm.modifyError = false;\n            backend.removeExtraService({\n                code: 'seat',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            }).then(function () {\n                if (vm.selectedFlight === flightNum) {\n                    updateSeatMap();\n                }\n            }, function (resp) {\n                if (resp.error) {\n                    vm.modifyError = resp.error;\n                }\n            });\n        }\n    }\n\n    function getSelectedPassengerFlightMeal(passengerNum, flightNum) {\n        var result,\n            passengerSegmentServices,\n            passengerSegmentSeat;\n        if (vm.orderInfo.editableExtraServicesByPassengers) {\n            if (vm.orderInfo.editableExtraServicesByPassengers[passengerNum]) {\n                /* jshint maxlen: 150 */\n                passengerSegmentServices = vm.orderInfo.editableExtraServicesByPassengers[passengerNum].passengerSegmentServices[flightNum];\n                if (passengerSegmentServices) {\n                    passengerSegmentSeat = _.findWhere(passengerSegmentServices, { code: 'seat' });\n                    if (passengerSegmentSeat) {\n                        result = passengerSegmentSeat.serviceItem;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function checkAllChoose() {\n      // vm.orderInfo.passengers пассажиры\n      // vm.orderInfo.plainFlights рейсы\n      // vm.service.availableByPassengerSegments\n      // vm.orderInfo.editableExtraServicesByPassengers\n      // здесть храняться купленные или выбранные услуги, все даже seat\n      // getSelectedPassengerFlightMeal(passengerNum, flightNum) он ципляет только если выбрано место и возвращает объект\n      // В это количество доступных рейсов где можно купить что-то и это количество должно совпадать с trueChoose\n      var trueFlight = 0;\n      // В этой перемнной храниться количество выбранных мест\n      var trueChoose = 0;\n\n      for (var i = 0; i < vm.service.availableByPassengerSegments.length; i++) {\n        for (var j = 0; j < vm.service.availableByPassengerSegments[i].length; j++) {\n          if(vm.service.availableByPassengerSegments[i][j]) {\n            trueFlight++;\n          }\n        }\n      }\n\n      for (var i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n        for (var j = 0; j < vm.orderInfo.passengers.length; j++) {\n          if (getSelectedPassengerFlightMeal(j, i)) {\n            trueChoose++;\n          }\n        }\n      }\n\n      return trueChoose == trueFlight;\n\n    }\n\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('popupMealRossiya', {\r\n\ttemplateUrl: 'components/popup-meal-rossiya/popup-meal-rossiya.html',\r\n\tcontroller: ['utils', PopupMealRossiyaController],\r\n\tcontrollerAs: 'vm',\r\n\tbindings: {\r\n\t\tmealMenu: '=menu',\r\n\t\tpassenger: '=passenger',\r\n\t\tcurrentPassengerIndex: '=',\r\n\t\tcurrentFlightIndex: '=',\r\n\t\tpassengers: '=passengers',\r\n\t\tflight: '=flight',\r\n\t\tsetPassengerFlightMeal: '=handler',\r\n\t\tclearPassengerFlightMeal: '&remove',\r\n\t\tgetPassengerFlightMeal: '=get',\r\n\t\tsubgroups: '=subgroups',\r\n\t\tmealImagesPath: '=path',\r\n\t\tservice: '=',\r\n\t\tselectFlightPassenger: '=select'\r\n\t}\r\n});\r\n\r\nfunction PopupMealRossiyaController(utils) {\r\n\r\n\tvar vm = this;\r\n\tvm.close = jQuery.fancybox.close;\r\n\tvm.mealMenuSubgroupMobileChange = mealMenuSubgroupMobileChange;\r\n\tvm.mealMenuSubgroup = false;\r\n\tvm.mealMenuSubgroupMobile = 'false';\r\n\tvm.subgroupItems = utils.createOptionsForUiSelect(vm.subgroups, 'all');\r\n\tvm.switchNext = switchNext;\r\n\tvm.switchPrev = switchPrev;\r\n\t\r\n\tvm.availablePassengers = vm.passengers.filter(function (passenger, index) {\r\n        return (\r\n            vm.service.availableByPassengerSegments[index] &&\r\n            vm.service.availableByPassengerSegments[index][vm.currentFlightIndex]\r\n        );\r\n    });\r\n\r\n\tfunction mealMenuSubgroupMobileChange() {\r\n\t\tif (vm.mealMenuSubgroupMobile === false) {\r\n\t\t\tvm.mealMenuSubgroup = false;\r\n\t\t} else {\r\n\t\t\tvm.mealMenuSubgroup = vm.mealMenuSubgroupMobile * 1;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction switchNext() {\r\n\t\tvar successSwitch = false;\r\n\t\tfor (var i = vm.currentPassengerIndex + 1; i < vm.passengers.length; i++) {\r\n\t\t\tif (\r\n\t\t\t\tvm.service.availableByPassengerSegments[i] &&\r\n\t\t\t\tvm.service.availableByPassengerSegments[i][vm.currentFlightIndex]\r\n\t\t\t) {\r\n\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, i);\r\n\t\t\t\tsuccessSwitch = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!successSwitch) {\r\n\t\t\tfor (var j = 0; j < vm.passengers.length; j++) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvm.service.availableByPassengerSegments[j] &&\r\n\t\t\t\t\tvm.service.availableByPassengerSegments[j][vm.currentFlightIndex]\r\n\t\t\t\t) {\r\n\t\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, j);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction switchPrev() {\r\n\t\tvar successSwitch = false;\r\n\t\tfor (var i = vm.currentPassengerIndex - 1; i > -1; i--) {\r\n\t\t\tif (\r\n\t\t\t\tvm.service.availableByPassengerSegments[i] &&\r\n\t\t\t\tvm.service.availableByPassengerSegments[i][vm.currentFlightIndex]\r\n\t\t\t) {\r\n\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, i);\r\n\t\t\t\tsuccessSwitch = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (!successSwitch) {\r\n\t\t\tfor (var j = vm.passengers.length - 1; j > -1; j--) {\r\n\t\t\t\tif (\r\n\t\t\t\t\tvm.service.availableByPassengerSegments[j] &&\r\n\t\t\t\t\tvm.service.availableByPassengerSegments[j][vm.currentFlightIndex]\r\n\t\t\t\t) {\r\n\t\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, j);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\r\n\r\n\r\nconsole.log('app: ', angular.module('app'));\r\n\r\nrequire('./components/popup-meal-rossiya/popup-meal-rossiya');\r\nrequire('./components/es-meal-rossiya/es-meal-rossiya');\r\nrequire('./components/es-seat-rossiya/es-seat-rossiya');\r\n\n},{\"./components/es-meal-rossiya/es-meal-rossiya\":1,\"./components/es-seat-rossiya/es-seat-rossiya\":2,\"./components/popup-meal-rossiya/popup-meal-rossiya\":3}]},{},[4]);\n"]}