{"version":3,"sources":["controllers-rossia.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","MealRossiyaController","$scope","$element","backend","utils","switchService","vm","locked","checkServiceRemovalProhibited","service","active","selectFirstAvailablePassengerFlight","removeExtraService","selectFlightPassenger","flightNum","passengerNum","selectedFlight","selectedPassenger","updateMealMenu","getFirstAvailableFlightNum","getFirstAvailablePassengerNum","mealMenu","itemsByPassengerSegments","mealMenuSubgroup","setPassengerFlightMeal","subgroupNum","mealItem","selectedPassengerFlightMeal","getSelectedPassengerFlightMeal","newMealParams","passenger_id","orderInfo","passengers","id","segment_id","plainFlights","subgroup","subgroups","service_type","serviceType","rfisc","then","modifyExtraService","removePassengerFlightMeal","result","passengerSegmentServices","passengerSegmentMeal","editableExtraServicesByPassengers","_","findWhere","serviceItem","scrollToStart","passengersTableContainer","scrollTo","scrollToEnd","scrollWidth","mobileTableScrollHandler","scrollLeft","clientWidth","scrollRight","canScrollRight","canScrollLeft","$apply","availableBySegments","availableByPassengerSegments","checkAllChoose","j","this","find","hasAlias","getAvailablePassengersCount","getParam","mealImagesPath","addOrderInfoListener","$watch","on","angular","component","templateUrl","controller","controllerAs","bindings","2","SeatRossiyaController","$timeout","modifyError","clearFlightPassenger","resp","error","seatMap","setSeatMapContainerTopPosition","reset","seatMapContainerTopPosition","jQuery","css","updateSeatMap","loadingSeatMap","seatMapError","setPassengerFlightSeat","chair","cabinAllowed","rowNumber","available","value","number","commonSubgroup","updateSunInfoByFlights","sunInfoByFlights","forEach","flight","sunInfo","origincity","departuredate","departuretime","destinationcity","arrivaldate","arrivaltime","getAvailablePassengersCountWrap","count","filter","pax","hasSeats","removePassengerFlightSeat","passengerSegmentSeat","3","PopupMealRossiyaController","setAvailablePassengers","availablePassengers","passenger","index","currentFlightIndex","mealMenuSubgroupMobileChange","mealMenuSubgroupMobile","switchNext","successSwitch","currentPassengerIndex","switchPrev","arrayString","arrays","Array","isArray","total","reduce","flat","current","concat","getGroupMeal","meal","close","fancybox","subgroupItems","createOptionsForUiSelect","clearPassengerFlightMeal","getPassengerFlightMeal","4","console","log","./components/es-meal-rossiya/es-meal-rossiya","./components/es-seat-rossiya/es-seat-rossiya","./components/popup-meal-rossiya/popup-meal-rossiya"],"mappings":"CAAA,QAAUA,GAAEC,EAAEC,EAAEC,GAAG,QAASC,GAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,GAAIE,GAAkB,kBAATC,UAAqBA,OAAQ,KAAIF,GAAGC,EAAE,MAAOA,GAAEF,GAAE,EAAI,IAAGI,EAAE,MAAOA,GAAEJ,GAAE,EAAI,IAAIK,GAAE,GAAIC,OAAM,uBAAuBN,EAAE,IAAK,MAAMK,GAAEE,KAAK,mBAAmBF,EAAE,GAAIG,GAAEX,EAAEG,IAAIS,WAAYb,GAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,GAAIE,GAAED,EAAEI,GAAG,GAAGL,EAAG,OAAOI,GAAEF,EAAEA,EAAEF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,MAAOD,GAAEG,GAAGS,QAAkD,IAAI,GAA1CL,GAAkB,kBAATD,UAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,GAAI,OAAOD,KAAKa,GAAG,SAAST,EAAQU,EAAOJ,GACvd,YAWA,SAASK,GAAsBC,EAAQC,EAAUC,EAASC,GA8CtD,QAASC,KACAC,EAAGC,QAAWJ,EAAQK,8BAA8B,UACrDF,EAAGG,QAAQC,QAAUJ,EAAGG,QAAQC,OAC5BJ,EAAGG,QAAQC,OACXC,IAEAR,EAAQS,oBACJnB,KAAM,UAMtB,QAASoB,GAAsBC,EAAWC,GACtCT,EAAGU,eAAiBF,EACpBR,EAAGW,kBAAoBF,EACvBG,IAGJ,QAASP,KACLL,EAAGU,eAAiBG,IACpBb,EAAGW,kBAAoBG,EAA8Bd,EAAGU,gBACxDE,IAGJ,QAASA,KACLZ,EAAGe,SAAWf,EAAGG,QAAQa,yBAAyBhB,EAAGW,mBAAmBX,EAAGU,gBAC3EV,EAAGiB,kBAAmB,EAG1B,QAASC,GAAuBC,EAAaC,GACzC,GAAIC,GAA8BC,EAA+BtB,EAAGW,kBAAmBX,EAAGU,gBACtFa,GACIpC,KAAM,OACNqC,aAAcxB,EAAGyB,UAAUC,WAAW1B,EAAGW,mBAAmBgB,GAC5DC,WAAY5B,EAAGyB,UAAUI,aAAa7B,EAAGU,gBAAgBiB,GACzDG,SAAU9B,EAAGG,QAAQ4B,UAAUZ,GAC/Ba,aAAcZ,EAASa,YACvBC,MAAOd,EAASc,MAEnBlC,GAAGC,SAEAoB,IACCxB,EAAQK,8BAA8B,OAAQF,EAAGW,kBAAmBX,EAAGU,gBAExEb,EAAQS,oBACJnB,KAAM,OACNqC,aAAcxB,EAAGyB,UAAUC,WAAW1B,EAAGW,mBAAmBgB,GAC5DC,WAAY5B,EAAGyB,UAAUI,aAAa7B,EAAGU,gBAAgBiB,GACzDK,aAAcX,EAA4BY,YAC1CC,MAAOb,EAA4Ba,QACpC,GAAMC,KAAK,WACVtC,EAAQuC,mBAAmBb,KAG/B1B,EAAQuC,mBAAmBb,IAKvC,QAASc,GAA0B5B,EAAcD,GACxCR,EAAGC,QAAWJ,EAAQK,8BAA8B,OAAQO,EAAcD,IAC3EX,EAAQS,oBACJnB,KAAM,OACNqC,aAAcxB,EAAGyB,UAAUC,WAAWjB,GAAckB,GACpDC,WAAY5B,EAAGyB,UAAUI,aAAarB,GAAWmB,KAK7D,QAASL,GAA+Bb,EAAcD,GAClD,GAAI8B,GACAC,EACAC,CAaJ,OAZIxC,GAAGyB,UAAUgB,mCACTzC,EAAGyB,UAAUgB,kCAAkChC,KAE/C8B,EAA2BvC,EAAGyB,UAAUgB,kCAAkChC,GAAc8B,yBAAyB/B,GAC7G+B,IACAC,EAAuBE,EAAEC,UAAUJ,GAA4BpD,KAAM,SACjEqD,IACAF,EAASE,EAAqBI,eAKvCN,EAGX,QAASO,KACLC,EAAyBC,SAAS,GAGtC,QAASC,KACLF,EAAyBC,SAASD,EAAyB,GAAGG,aAGlE,QAASC,KACL,GAAIC,GAAaL,EAAyB,GAAGK,WACzCF,EAAcH,EAAyB,GAAGG,YAC1CG,EAAcN,EAAyB,GAAGM,YAC1CC,EAAcJ,EAAcG,EAAcD,CAC9CnD,GAAGsD,eAAkC,IAAhBD,EACrBrD,EAAGuD,cAAgC,IAAfJ,EACpBxD,EAAO6D,SAGX,QAAS3C,KACL,GAAI7B,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,EAAGyB,UAAUI,aAAatC,OAAQP,IAC9C,GAAIgB,EAAGG,QAAQsD,oBAAoBzE,GAC/B,MAAOA,EAGf,OAAO,GAGX,QAAS8B,GAA8BN,GACnC,GAAIxB,EACJ,IAAIgB,EAAGG,QAAQuD,6BACX,IAAK1E,EAAI,EAAGA,EAAIgB,EAAGyB,UAAUC,WAAWnC,OAAQP,IAC5C,GAAIgB,EAAGG,QAAQuD,6BAA6B1E,GAAGwB,GAC3C,MAAOxB,EAInB,OAAO,GAGX,QAAS2E,KAEP,IAAK,GAAI3E,GAAI,EAAGA,EAAIgB,EAAGyB,UAAUI,aAAatC,OAAQP,IACpD,IAAK,GAAI4E,GAAI,EAAGA,EAAI5D,EAAGyB,UAAUC,WAAWnC,OAAQqE,IAClD,GAAItC,EAA+BsC,EAAG5E,GACpC,OAAO,CAKb,QAAO,EAvLT,GAAIgB,GAAK6D,KACLf,EAA2BlD,EAASkE,KAAK,+BAE7C9D,GAAGD,cAAgBA,EACnBC,EAAGO,sBAAwBA,EAC3BP,EAAGK,oCAAsCA,EACzCL,EAAGkB,uBAAyBA,EAC5BlB,EAAGqC,0BAA4BA,EAC/BrC,EAAGsB,+BAAiCA,EACpCtB,EAAG6C,cAAgBA,EACnB7C,EAAGgD,YAAcA,EACjBhD,EAAG2D,eAAiBA,EACpB3D,EAAG+D,SAAWlE,EAAQkE,SACtB/D,EAAGgE,4BAA8BlE,EAAMkE,4BACvChE,EAAGE,8BAAgCL,EAAQK,8BAE3CF,EAAGsD,gBAAiB,EACpBtD,EAAGuD,eAAgB,EAEnBvD,EAAGU,eAAiB,EACpBV,EAAGW,kBAAoB,EAEnBd,EAAQoE,SAAS,+BACjBjE,EAAGkE,eAAiBrE,EAAQoE,SAAS,+BAAiC,oBAEtEjE,EAAGkE,eAAiB,iDAGxBrE,EAAQsE,qBAAqB,SAAU1C,GACnCzB,EAAGyB,UAAYA,IAChB,GAAO,GAEV9B,EAAOyE,OAAO,aAAc,WACpBpE,EAAGe,UACHH,MAIRkC,EAAyBuB,GAAG,SAAUnB,GAElClD,EAAGG,QAAQC,QACXQ,IArDR0D,QAAQ7E,OAAO,OAAO8E,UAAU,iBAC5BC,YAAa,kDACbC,YAAa,SAAU,WAAW,UAAW,QAAS/E,GACtDgF,aAAc,KACdC,UACIxE,QAAS,WACTF,OAAQ,kBAmMV2E,GAAG,SAAS7F,EAAQU,EAAOJ,GACjC,YAWA,SAASwF,GAAsBlF,EAAQC,EAAUkF,EAAUjF,EAASC,GA0ChE,QAASC,KACAC,EAAGC,QAAWJ,EAAQK,8BAA8B,UACrDF,EAAGG,QAAQC,QAAUJ,EAAGG,QAAQC,OAC5BJ,EAAGG,QAAQC,OACXC,KAEAL,EAAG+E,aAAc,EACjBlF,EAAQS,oBACJnB,KAAM,SACPgD,KAAK6C,EAAsB,SAAUC,GAChCA,EAAKC,QACLlF,EAAG+E,YAAcE,EAAKC,WAO1C,QAASF,KACLhF,EAAGmF,SAAU,EACbnF,EAAGU,eAAiB,GACpBV,EAAGW,kBAAoB,GAG3B,QAASyE,GAA+BC,GAEhCC,EADAD,EAC8B,MAEAE,OAAO,gCAAgCC,IAAI,OAIjF,QAASjF,GAAsBC,EAAWC,GAEtC2E,EAA+BpF,EAAGU,iBAAmBF,GACrDR,EAAGU,eAAiBF,EACpBR,EAAGW,kBAAoBF,EACvBgF,IAGJ,QAASpF,KACLL,EAAGU,eAAiBG,IACpBb,EAAGW,kBAAoBG,EAA8Bd,EAAGU,gBACxD+E,IAGJ,QAASA,KAEwB,KAAzBzF,EAAGW,mBAAkD,KAAtBX,EAAGU,iBAClCV,EAAG0F,gBAAiB,EACpB1F,EAAG2F,cAAe,EAClB9F,EAAQsF,QACJnF,EAAGyB,UAAUC,WAAW1B,EAAGW,mBAAmBgB,GAC9C3B,EAAGyB,UAAUI,aAAa7B,EAAGU,gBAAgBiB,IAC/CQ,KAAK,SAAU8C,GACbjF,EAAGmF,QAAUF,EACbjF,EAAG0F,gBAAiB,EACpBZ,EAAS,WACLS,OAAO,gCAAgCC,IAAI,MAAOF,MAEvD,SAAUL,GACTjF,EAAG2F,aAAeV,EAAKC,MACvBlF,EAAG0F,gBAAiB,KAMhC,QAASE,GAAuBC,EAAOC,EAAcC,GAC5C/F,EAAGC,QACA4F,EAAMG,WAAaF,IACnBV,IACApF,EAAG+E,aAAc,EACjBlF,EAAQuC,oBACJjD,KAAM,OACNqC,aAAcxB,EAAGyB,UAAUC,WAAW1B,EAAGW,mBAAmBgB,GAC5DC,WAAY5B,EAAGyB,UAAUI,aAAa7B,EAAGU,gBAAgBiB,GACzDsE,MAAOF,EAAYF,EAAMK,OACzBpE,SAAU9B,EAAGG,QAAQgG,eACrBjE,MAAO2D,EAAM3D,OAAS,GACtBF,aAAc,MACfG,KAAKsD,EAAe,SAAUR,GACzBA,EAAKC,QACLlF,EAAG+E,YAAcE,EAAKC,UAO1C,QAASkB,KACLpG,EAAGqG,oBACHrG,EAAGyB,UAAUI,aAAayE,QAAQ,SAAUC,EAAQ/F,GAChDX,EAAQ2G,QACJD,EAAOE,WACPF,EAAOG,cACPH,EAAOI,cACPJ,EAAOK,gBACPL,EAAOM,YACPN,EAAOO,aACT3E,KAAK,SAAU8C,GACbjF,EAAGqG,iBAAiB7F,GAAayE,MAK7C,QAASpE,KACL,GAAI7B,EACJ,KAAKA,EAAI,EAAGA,EAAIgB,EAAGyB,UAAUI,aAAatC,OAAQP,IAC9C,GAAIgB,EAAGG,QAAQsD,oBAAoBzE,GAC/B,MAAOA,EAGf,OAAO,GAGX,QAAS8B,GAA8BN,GACnC,GAAIxB,EACJ,IAAIgB,EAAGG,QAAQuD,6BACX,IAAK1E,EAAI,EAAGA,EAAIgB,EAAGyB,UAAUC,WAAWnC,OAAQP,IAC5C,GAAIgB,EAAGG,QAAQuD,6BAA6B1E,GAAGwB,GAC3C,MAAOxB,EAInB,OAAO,GAGX,QAAS6D,KACLC,EAAyBC,SAAS,GAGtC,QAASC,KACLF,EAAyBC,SAASD,EAAyB,GAAGG,aAGlE,QAASC,KACL,GAAIC,GAAaL,EAAyB,GAAGK,WACzCF,EAAcH,EAAyB,GAAGG,YAC1CG,EAAcN,EAAyB,GAAGM,YAC1CC,EAAcJ,EAAcG,EAAcD,CAC9CnD,GAAGsD,eAAkC,IAAhBD,EACrBrD,EAAGuD,cAAgC,IAAfJ,EACpBxD,EAAO6D,SAGX,QAASuD,GAAgCrD,GACrC,GAAIsD,GAAQlH,EAAMkE,4BAA4BN,EAC9C,OAAOsD,GAAQhH,EAAGyB,UAAUC,WAAWuF,OAAO,SAAUC,GACpD,OAAQA,EAAIC,WACb5H,OAGP,QAAS6H,GAA0B3G,EAAcD,GAExCR,EAAGC,QAAWJ,EAAQK,8BAA8B,OAAQO,EAAcD,KAE3ER,EAAG+E,aAAc,EACjBlF,EAAQS,oBACJnB,KAAM,OACNqC,aAAcxB,EAAGyB,UAAUC,WAAWjB,GAAckB,GACpDC,WAAY5B,EAAGyB,UAAUI,aAAarB,GAAWmB,KAClDQ,KAAK,WACAnC,EAAGU,iBAAmBF,GACtBiF,KAEL,SAAUR,GACLA,EAAKC,QACLlF,EAAG+E,YAAcE,EAAKC,UAMtC,QAAS5D,GAA+Bb,EAAcD,GAClD,GAAI8B,GACAC,EACA8E,CAaJ,OAZIrH,GAAGyB,UAAUgB,mCACTzC,EAAGyB,UAAUgB,kCAAkChC,KAE/C8B,EAA2BvC,EAAGyB,UAAUgB,kCAAkChC,GAAc8B,yBAAyB/B,GAC7G+B,IACA8E,EAAuB3E,EAAEC,UAAUJ,GAA4BpD,KAAM,SACjEkI,IACA/E,EAAS+E,EAAqBzE,eAKvCN,EAGX,QAASqB,KAEP,IAAK,GAAI3E,GAAI,EAAGA,EAAIgB,EAAGyB,UAAUI,aAAatC,OAAQP,IACpD,IAAK,GAAI4E,GAAI,EAAGA,EAAI5D,EAAGyB,UAAUC,WAAWnC,OAAQqE,IAClD,GAAItC,EAA+BsC,EAAG5E,GACpC,OAAO,CAKb,QAAO,EAnPT,GAAIgB,GAAK6D,KACLf,EAA2BlD,EAASkE,KAAK,gCACzCwB,EAA8B,KAElCtF,GAAGD,cAAgBA,EAEnBC,EAAGO,sBAAwBA,EAC3BP,EAAGK,oCAAsCA,EACzCL,EAAG4F,uBAAyBA,EAE5B5F,EAAGsB,+BAAiCA,EACpCtB,EAAG2D,eAAiBA,EAEpB3D,EAAG+D,SAAWlE,EAAQkE,SAEtB/D,EAAG6C,cAAgBA,EACnB7C,EAAGgD,YAAcA,EAEjBhD,EAAGgE,4BAA8BlE,EAAMkE,4BACvChE,EAAG+G,gCAAkCA,EAErC/G,EAAGoH,0BAA4BA,EAE/BpH,EAAGE,8BAAgCL,EAAQK,8BAE3CF,EAAGsD,gBAAiB,EACpBtD,EAAGuD,eAAgB,EAEnB1D,EAAQsE,qBAAqB,SAAU1C,GACnCzB,EAAGyB,UAAYA,IAChB,GAAO,GAEV2E,IAEAtD,EAAyBuB,GAAG,SAAUnB,GAElClD,EAAGG,QAAQC,QACXC,IAjDRiE,QAAQ7E,OAAO,OAAO8E,UAAU,iBAC5BC,YAAa,kDACbC,YAAa,SAAU,WAAY,WAAY,UAAW,QAASI,GACnEH,aAAc,KACdC,UACIxE,QAAS,WACTF,OAAQ,kBA+PVqH,GAAG,SAASvI,EAAQU,EAAOJ,GACjC,YAsBA,SAASkI,GAA2BzH,EAAOH,GAa1C,QAAS6H,KACRxH,EAAGyH,oBAAsBzH,EAAG0B,WAAWuF,OAAO,SAAUS,EAAWC,GAChE,MACE3H,GAAGG,QAAQuD,6BAA6BiE,IACxC3H,EAAGG,QAAQuD,6BAA6BiE,GAAO3H,EAAG4H,sBASxD,QAASC,KACJ7H,EAAG8H,0BAA2B,EACjC9H,EAAGiB,kBAAmB,EAEtBjB,EAAGiB,iBAA+C,EAA5BjB,EAAG8H,uBAI3B,QAASC,KAER,IAAK,GADDC,IAAgB,EACXhJ,EAAIgB,EAAGiI,sBAAwB,EAAGjJ,EAAIgB,EAAG0B,WAAWnC,OAAQP,IACpE,GACCgB,EAAGG,QAAQuD,6BAA6B1E,IACxCgB,EAAGG,QAAQuD,6BAA6B1E,GAAGgB,EAAG4H,oBAC7C,CACD5H,EAAGO,sBAAsBP,EAAG4H,mBAAoB5I,GAChDgJ,GAAgB,CAChB,OAGF,IAAKA,EACJ,IAAK,GAAIpE,GAAI,EAAGA,EAAI5D,EAAG0B,WAAWnC,OAAQqE,IACzC,GACC5D,EAAGG,QAAQuD,6BAA6BE,IACxC5D,EAAGG,QAAQuD,6BAA6BE,GAAG5D,EAAG4H,oBAC7C,CACD5H,EAAGO,sBAAsBP,EAAG4H,mBAAoBhE,EAChD,QAMJ,QAASsE,KAER,IAAK,GADDF,IAAgB,EACXhJ,EAAIgB,EAAGiI,sBAAwB,EAAGjJ,EAAI,GAAIA,IAClD,GACCgB,EAAGG,QAAQuD,6BAA6B1E,IACxCgB,EAAGG,QAAQuD,6BAA6B1E,GAAGgB,EAAG4H,oBAC7C,CACD5H,EAAGO,sBAAsBP,EAAG4H,mBAAoB5I,GAChDgJ,GAAgB,CAChB,OAGF,IAAKA,EACJ,IAAK,GAAIpE,GAAI5D,EAAG0B,WAAWnC,OAAS,EAAGqE,EAAI,GAAIA,IAC9C,GACC5D,EAAGG,QAAQuD,6BAA6BE,IACxC5D,EAAGG,QAAQuD,6BAA6BE,GAAG5D,EAAG4H,oBAC7C,CACD5H,EAAGO,sBAAsBP,EAAG4H,mBAAoBhE,EAChD,QAMJ,QAASuE,GAAYC,GAEpB,GAAIC,MAAMC,QAAQF,GAAlB,CAEA,GAAIG,GAAQH,EAAOI,OAAO,SAASC,EAAMC,GACxC,MAAOD,GAAKE,OAAOD,OAGpB,OAAG1I,GAAGiB,oBAAqB,EAAesH,EAEnCH,GAGR,QAASQ,GAAaC,EAAMT,GAE3B,IAAK,GAAIpJ,GAAI,EAAGA,EAAIoJ,EAAO7I,OAAQP,IAClC,IAAI,GAAI4E,GAAI,EAAGA,EAAIwE,EAAOpJ,GAAGO,OAAQqE,IACpC,GAAIwE,EAAOpJ,GAAG4E,GAAU,OAAKiF,EAAY,MACxC,MAAO7J,GApGX,GAAIgB,GAAK6D,IACT7D,GAAG8I,MAAQvD,OAAOwD,SAASD,MAC3B9I,EAAG6H,6BAA+BA,EAClC7H,EAAGiB,kBAAmB,EACtBjB,EAAG8H,uBAAyB,QAC5B9H,EAAGgJ,cAAgBlJ,EAAMmJ,yBAAyBjJ,EAAG+B,UAAW,OAChE/B,EAAG+H,WAAaA,EAChB/H,EAAGkI,WAAaA,EAChBlI,EAAGmI,YAAcA,EACjBnI,EAAG4I,aAAeA,EAWlBjJ,EAAOyE,OAAO,wBAAyB,WACtCoD,MA5CFlD,QAAQ7E,OAAO,OAAO8E,UAAU,oBAC/BC,YAAa,wDACbC,YAAa,QAAS,SAAU8C,GAChC7C,aAAc,KACdC,UACC5D,SAAU,QACV2G,UAAW,aACXO,sBAAuB,IACvBL,mBAAoB,IACpBlG,WAAY,cACZ6E,OAAQ,UACRrF,uBAAwB,WACxBgI,yBAA0B,UAC1BC,uBAAwB,OACxBpH,UAAW,aACXmC,eAAgB,QAChB/D,QAAS,IACTI,sBAAuB,kBAkHnB6I,GAAG,SAASrK,EAAQU,EAAOJ,GACjC,YAIAgK,SAAQC,IAAI,QAAShF,QAAQ7E,OAAO,QAEpCV,EAAQ,sDACRA,EAAQ,gDACRA,EAAQ,kDAELwK,+CAA+C,EAAEC,+CAA+C,EAAEC,qDAAqD,SAAS","file":"controllers-rossia.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('esMealRossiya', {\n    templateUrl: 'components/es-meal-rossiya/es-meal-rossiya.html',\n    controller: ['$scope', '$element','backend', 'utils', MealRossiyaController],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction MealRossiyaController($scope, $element, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer');\n\n    vm.switchService = switchService;\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.setPassengerFlightMeal = setPassengerFlightMeal;\n    vm.removePassengerFlightMeal = removePassengerFlightMeal;\n    vm.getSelectedPassengerFlightMeal = getSelectedPassengerFlightMeal;\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n    vm.checkAllChoose = checkAllChoose;\n    vm.hasAlias = backend.hasAlias;\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    vm.selectedFlight = 0;\n    vm.selectedPassenger = 0;\n\n    if (backend.getParam('site.externalStorageBaseUrl')) {\n        vm.mealImagesPath = backend.getParam('site.externalStorageBaseUrl') + '/img/content/meal';\n    } else {\n        vm.mealImagesPath = './themes/websky/assets/static/img/content/meal';\n    }\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    $scope.$watch('vm.service', function () {\n        if (vm.mealMenu) {\n            updateMealMenu();\n        }\n    });\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        updateMealMenu();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                backend.removeExtraService({\n                    code: 'meal'\n                });\n            }\n        }\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateMealMenu();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateMealMenu();\n    }\n\n    function updateMealMenu() {\n        vm.mealMenu = vm.service.itemsByPassengerSegments[vm.selectedPassenger][vm.selectedFlight];\n        vm.mealMenuSubgroup = false;\n    }\n\n    function setPassengerFlightMeal(subgroupNum, mealItem) {\n        var selectedPassengerFlightMeal = getSelectedPassengerFlightMeal(vm.selectedPassenger, vm.selectedFlight),\n            newMealParams = {\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                subgroup: vm.service.subgroups[subgroupNum],\n                service_type: mealItem.serviceType,\n                rfisc: mealItem.rfisc\n            };\n        if (!vm.locked) {\n            if (\n                selectedPassengerFlightMeal &&\n                !backend.checkServiceRemovalProhibited('meal', vm.selectedPassenger, vm.selectedFlight)\n            ) {\n                backend.removeExtraService({\n                    code: 'meal',\n                    passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                    segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                    service_type: selectedPassengerFlightMeal.serviceType,\n                    rfisc: selectedPassengerFlightMeal.rfisc\n                }, true).then(function () {\n                    backend.modifyExtraService(newMealParams);\n                });\n            } else {\n                backend.modifyExtraService(newMealParams);\n            }\n        }\n    }\n\n    function removePassengerFlightMeal(passengerNum, flightNum) {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('meal', passengerNum, flightNum)) {\n            backend.removeExtraService({\n                code: 'meal',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            });\n        }\n    }\n\n    function getSelectedPassengerFlightMeal(passengerNum, flightNum) {\n        var result,\n            passengerSegmentServices,\n            passengerSegmentMeal;\n        if (vm.orderInfo.editableExtraServicesByPassengers) {\n            if (vm.orderInfo.editableExtraServicesByPassengers[passengerNum]) {\n                /* jshint maxlen: 150 */\n                passengerSegmentServices = vm.orderInfo.editableExtraServicesByPassengers[passengerNum].passengerSegmentServices[flightNum];\n                if (passengerSegmentServices) {\n                    passengerSegmentMeal = _.findWhere(passengerSegmentServices, { code: 'meal' });\n                    if (passengerSegmentMeal) {\n                        result = passengerSegmentMeal.serviceItem;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function checkAllChoose() {\n\n      for (var i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n        for (var j = 0; j < vm.orderInfo.passengers.length; j++) {\n          if (getSelectedPassengerFlightMeal(j, i)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n\n    }\n\n}\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('esSeatRossiya', {\n    templateUrl: 'components/es-seat-rossiya/es-seat-rossiya.html',\n    controller: ['$scope', '$element', '$timeout', 'backend', 'utils', SeatRossiyaController],\n    controllerAs: 'vm',\n    bindings: {\n        service: '=service',\n        locked: '=locked'\n    }\n});\n\nfunction SeatRossiyaController($scope, $element, $timeout, backend, utils) {\n\n    var vm = this,\n        passengersTableContainer = $element.find('div.passengersTableContainer'),\n        seatMapContainerTopPosition = '0px';\n\n    vm.switchService = switchService;\n\n    vm.selectFlightPassenger = selectFlightPassenger;\n    vm.selectFirstAvailablePassengerFlight = selectFirstAvailablePassengerFlight;\n    vm.setPassengerFlightSeat = setPassengerFlightSeat;\n    //\n    vm.getSelectedPassengerFlightMeal = getSelectedPassengerFlightMeal;\n    vm.checkAllChoose = checkAllChoose;\n\n    vm.hasAlias = backend.hasAlias;\n\n    vm.scrollToStart = scrollToStart;\n    vm.scrollToEnd = scrollToEnd;\n\n    vm.getAvailablePassengersCount = utils.getAvailablePassengersCount;\n    vm.getAvailablePassengersCountWrap = getAvailablePassengersCountWrap;\n\n    vm.removePassengerFlightSeat = removePassengerFlightSeat;\n\n    vm.checkServiceRemovalProhibited = backend.checkServiceRemovalProhibited;\n\n    vm.canScrollRight = true;\n    vm.canScrollLeft = false;\n\n    backend.addOrderInfoListener(function (orderInfo) {\n        vm.orderInfo = orderInfo;\n    }, false, true);\n\n    updateSunInfoByFlights();\n\n    passengersTableContainer.on('scroll', mobileTableScrollHandler);\n\n    if (vm.service.active) {\n        selectFirstAvailablePassengerFlight();\n    }\n\n    function switchService() {\n        if (!vm.locked && !backend.checkServiceRemovalProhibited('seat')) {\n            vm.service.active = !vm.service.active;\n            if (vm.service.active) {\n                selectFirstAvailablePassengerFlight();\n            } else {\n                vm.modifyError = false;\n                backend.removeExtraService({\n                    code: 'seat'\n                }).then(clearFlightPassenger, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function clearFlightPassenger() {\n        vm.seatMap = false;\n        vm.selectedFlight = -1;\n        vm.selectedPassenger = -1;\n    }\n\n    function setSeatMapContainerTopPosition(reset) {\n        if (reset) {\n            seatMapContainerTopPosition = '0px';\n        } else {\n            seatMapContainerTopPosition = jQuery('#seatMapCont .mCSB_container').css('top');\n        }\n    }\n\n    function selectFlightPassenger(flightNum, passengerNum) {\n        // Нужно запомнить положение карты мест для переключения между пассажирами одного сегмента\n        setSeatMapContainerTopPosition(vm.selectedFlight !== flightNum);\n        vm.selectedFlight = flightNum;\n        vm.selectedPassenger = passengerNum;\n        updateSeatMap();\n    }\n\n    function selectFirstAvailablePassengerFlight() {\n        vm.selectedFlight = getFirstAvailableFlightNum();\n        vm.selectedPassenger = getFirstAvailablePassengerNum(vm.selectedFlight);\n        updateSeatMap();\n    }\n\n    function updateSeatMap() {\n\n        if (vm.selectedPassenger !== -1 && vm.selectedFlight !== -1) {\n            vm.loadingSeatMap = true;\n            vm.seatMapError = false;\n            backend.seatMap(\n                vm.orderInfo.passengers[vm.selectedPassenger].id,\n                vm.orderInfo.plainFlights[vm.selectedFlight].id\n            ).then(function (resp) {\n                vm.seatMap = resp;\n                vm.loadingSeatMap = false;\n                $timeout(function () {\n                    jQuery('#seatMapCont .mCSB_container').css('top', seatMapContainerTopPosition);\n                });\n            }, function (resp) {\n                vm.seatMapError = resp.error;\n                vm.loadingSeatMap = false;\n            });\n        }\n\n    }\n\n    function setPassengerFlightSeat(chair, cabinAllowed, rowNumber) {\n        if (!vm.locked) {\n            if (chair.available && cabinAllowed) {\n                setSeatMapContainerTopPosition();\n                vm.modifyError = false;\n                backend.modifyExtraService({\n                    code: 'seat',\n                    passenger_id: vm.orderInfo.passengers[vm.selectedPassenger].id,\n                    segment_id: vm.orderInfo.plainFlights[vm.selectedFlight].id,\n                    value: rowNumber + chair.number,\n                    subgroup: vm.service.commonSubgroup,\n                    rfisc: chair.rfisc || '',\n                    service_type: 'F'\n                }).then(updateSeatMap, function (resp) {\n                    if (resp.error) {\n                        vm.modifyError = resp.error;\n                    }\n                });\n            }\n        }\n    }\n\n    function updateSunInfoByFlights() {\n        vm.sunInfoByFlights = [];\n        vm.orderInfo.plainFlights.forEach(function (flight, flightNum) {\n            backend.sunInfo(\n                flight.origincity,\n                flight.departuredate,\n                flight.departuretime,\n                flight.destinationcity,\n                flight.arrivaldate,\n                flight.arrivaltime\n            ).then(function (resp) {\n                vm.sunInfoByFlights[flightNum] = resp;\n            });\n        });\n    }\n\n    function getFirstAvailableFlightNum() {\n        var i;\n        for (i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n            if (vm.service.availableBySegments[i]) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function getFirstAvailablePassengerNum(flightNum) {\n        var i;\n        if (vm.service.availableByPassengerSegments) {\n            for (i = 0; i < vm.orderInfo.passengers.length; i++) {\n                if (vm.service.availableByPassengerSegments[i][flightNum]) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    function scrollToStart() {\n        passengersTableContainer.scrollTo(0);\n    }\n\n    function scrollToEnd() {\n        passengersTableContainer.scrollTo(passengersTableContainer[0].scrollWidth);\n    }\n\n    function mobileTableScrollHandler() {\n        var scrollLeft = passengersTableContainer[0].scrollLeft,\n            scrollWidth = passengersTableContainer[0].scrollWidth,\n            clientWidth = passengersTableContainer[0].clientWidth,\n            scrollRight = scrollWidth - clientWidth - scrollLeft;\n        vm.canScrollRight = (scrollRight !== 0);\n        vm.canScrollLeft = (scrollLeft !== 0);\n        $scope.$apply();\n    }\n\n    function getAvailablePassengersCountWrap(availableByPassengerSegments) {\n        var count = utils.getAvailablePassengersCount(availableByPassengerSegments);\n        return count + vm.orderInfo.passengers.filter(function (pax) {\n            return !pax.hasSeats;\n        }).length;\n    }\n\n    function removePassengerFlightSeat(passengerNum, flightNum) {\n        if (\n            !vm.locked && !backend.checkServiceRemovalProhibited('seat', passengerNum, flightNum)\n        ) {\n            vm.modifyError = false;\n            backend.removeExtraService({\n                code: 'seat',\n                passenger_id: vm.orderInfo.passengers[passengerNum].id,\n                segment_id: vm.orderInfo.plainFlights[flightNum].id\n            }).then(function () {\n                if (vm.selectedFlight === flightNum) {\n                    updateSeatMap();\n                }\n            }, function (resp) {\n                if (resp.error) {\n                    vm.modifyError = resp.error;\n                }\n            });\n        }\n    }\n\n    function getSelectedPassengerFlightMeal(passengerNum, flightNum) {\n        var result,\n            passengerSegmentServices,\n            passengerSegmentSeat;\n        if (vm.orderInfo.editableExtraServicesByPassengers) {\n            if (vm.orderInfo.editableExtraServicesByPassengers[passengerNum]) {\n                /* jshint maxlen: 150 */\n                passengerSegmentServices = vm.orderInfo.editableExtraServicesByPassengers[passengerNum].passengerSegmentServices[flightNum];\n                if (passengerSegmentServices) {\n                    passengerSegmentSeat = _.findWhere(passengerSegmentServices, { code: 'seat' });\n                    if (passengerSegmentSeat) {\n                        result = passengerSegmentSeat.serviceItem;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n\n    function checkAllChoose() {\n\n      for (var i = 0; i < vm.orderInfo.plainFlights.length; i++) {\n        for (var j = 0; j < vm.orderInfo.passengers.length; j++) {\n          if (getSelectedPassengerFlightMeal(j, i)) {\n            return true\n          }\n        }\n      }\n\n      return false;\n\n    }\n\n}\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\nangular.module('app').component('popupMealRossiya', {\n\ttemplateUrl: 'components/popup-meal-rossiya/popup-meal-rossiya.html',\n\tcontroller: ['utils', '$scope', PopupMealRossiyaController],\n\tcontrollerAs: 'vm',\n\tbindings: {\n\t\tmealMenu: '=menu',\n\t\tpassenger: '=passenger',\n\t\tcurrentPassengerIndex: '=',\n\t\tcurrentFlightIndex: '=',\n\t\tpassengers: '=passengers',\n\t\tflight: '=flight',\n\t\tsetPassengerFlightMeal: '=handler',\n\t\tclearPassengerFlightMeal: '&remove',\n\t\tgetPassengerFlightMeal: '=get',\n\t\tsubgroups: '=subgroups',\n\t\tmealImagesPath: '=path',\n\t\tservice: '=',\n\t\tselectFlightPassenger: '=select'\n\t}\n});\n\nfunction PopupMealRossiyaController(utils, $scope) {\n\n\tvar vm = this;\n\tvm.close = jQuery.fancybox.close;\n\tvm.mealMenuSubgroupMobileChange = mealMenuSubgroupMobileChange;\n\tvm.mealMenuSubgroup = false;\n\tvm.mealMenuSubgroupMobile = 'false';\n\tvm.subgroupItems = utils.createOptionsForUiSelect(vm.subgroups, 'all');\n\tvm.switchNext = switchNext;\n\tvm.switchPrev = switchPrev;\n\tvm.arrayString = arrayString;\n\tvm.getGroupMeal = getGroupMeal;\n\n\tfunction setAvailablePassengers() {\n\t\tvm.availablePassengers = vm.passengers.filter(function (passenger, index) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t\tvm.service.availableByPassengerSegments[index] &&\n\t\t\t\t\t\t\tvm.service.availableByPassengerSegments[index][vm.currentFlightIndex]\n\t\t\t\t\t);\n\t\t\t});\n\t}\n\n\t$scope.$watch('vm.currentFlightIndex', function () {\n\t\tsetAvailablePassengers();\n\t});\n\n\tfunction mealMenuSubgroupMobileChange() {\n\t\tif (vm.mealMenuSubgroupMobile === false) {\n\t\t\tvm.mealMenuSubgroup = false;\n\t\t} else {\n\t\t\tvm.mealMenuSubgroup = vm.mealMenuSubgroupMobile * 1;\n\t\t}\n\t}\n\n\tfunction switchNext() {\n\t\tvar successSwitch = false;\n\t\tfor (var i = vm.currentPassengerIndex + 1; i < vm.passengers.length; i++) {\n\t\t\tif (\n\t\t\t\tvm.service.availableByPassengerSegments[i] &&\n\t\t\t\tvm.service.availableByPassengerSegments[i][vm.currentFlightIndex]\n\t\t\t) {\n\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, i);\n\t\t\t\tsuccessSwitch = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!successSwitch) {\n\t\t\tfor (var j = 0; j < vm.passengers.length; j++) {\n\t\t\t\tif (\n\t\t\t\t\tvm.service.availableByPassengerSegments[j] &&\n\t\t\t\t\tvm.service.availableByPassengerSegments[j][vm.currentFlightIndex]\n\t\t\t\t) {\n\t\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction switchPrev() {\n\t\tvar successSwitch = false;\n\t\tfor (var i = vm.currentPassengerIndex - 1; i > -1; i--) {\n\t\t\tif (\n\t\t\t\tvm.service.availableByPassengerSegments[i] &&\n\t\t\t\tvm.service.availableByPassengerSegments[i][vm.currentFlightIndex]\n\t\t\t) {\n\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, i);\n\t\t\t\tsuccessSwitch = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!successSwitch) {\n\t\t\tfor (var j = vm.passengers.length - 1; j > -1; j--) {\n\t\t\t\tif (\n\t\t\t\t\tvm.service.availableByPassengerSegments[j] &&\n\t\t\t\t\tvm.service.availableByPassengerSegments[j][vm.currentFlightIndex]\n\t\t\t\t) {\n\t\t\t\t\tvm.selectFlightPassenger(vm.currentFlightIndex, j);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction arrayString(arrays) {\n\n\t\tif(!Array.isArray(arrays)) return;\n\n\t\tvar total = arrays.reduce(function(flat, current) {\n\t\t\treturn flat.concat(current);\n\t\t}, []);\n\n\t\tif(vm.mealMenuSubgroup === false ) return total;\n\n\t\treturn arrays;\n\t}\n\n\tfunction getGroupMeal(meal, arrays) {\n\n\t\tfor (var i = 0; i < arrays.length; i++) {\n\t\t\tfor(var j = 0; j < arrays[i].length; j++) {\n\t\t\t\tif (arrays[i][j]['rfisc'] == meal['rfisc']) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\n\n\nconsole.log('app: ', angular.module('app'));\n\nrequire('./components/popup-meal-rossiya/popup-meal-rossiya');\nrequire('./components/es-meal-rossiya/es-meal-rossiya');\nrequire('./components/es-seat-rossiya/es-seat-rossiya');\n\n},{\"./components/es-meal-rossiya/es-meal-rossiya\":1,\"./components/es-seat-rossiya/es-seat-rossiya\":2,\"./components/popup-meal-rossiya/popup-meal-rossiya\":3}]},{},[4]);\n"]}